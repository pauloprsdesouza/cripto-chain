// <auto-generated />
using System;
using Cripto.Chain.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Cripto.Chain.Api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("criptochain")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Cripto.Chain.Api.Infrastructure.Database.DataModel.Assets.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("asset");
                });

            modelBuilder.Entity("Cripto.Chain.Api.Infrastructure.Database.DataModel.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Cripto.Chain.Api.Infrastructure.Database.DataModel.Transacitons.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreditWalletId")
                        .HasColumnType("integer");

                    b.Property<int>("DebitWalletId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreditWalletId");

                    b.HasIndex("DebitWalletId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("Cripto.Chain.Api.Infrastructure.Database.DataModel.Wallets.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AssetId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("CustomerId");

                    b.ToTable("wallet");
                });

            modelBuilder.Entity("Cripto.Chain.Api.Infrastructure.Database.DataModel.Transacitons.Transaction", b =>
                {
                    b.HasOne("Cripto.Chain.Api.Infrastructure.Database.DataModel.Wallets.Wallet", "CreditWallet")
                        .WithMany("CreditTransactions")
                        .HasForeignKey("CreditWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cripto.Chain.Api.Infrastructure.Database.DataModel.Wallets.Wallet", "DebitWallet")
                        .WithMany("DebitTransactions")
                        .HasForeignKey("DebitWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cripto.Chain.Api.Infrastructure.Database.DataModel.Wallets.Wallet", b =>
                {
                    b.HasOne("Cripto.Chain.Api.Infrastructure.Database.DataModel.Assets.Asset", "Asset")
                        .WithMany("Wallets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cripto.Chain.Api.Infrastructure.Database.DataModel.Customers.Customer", "Customer")
                        .WithMany("Wallets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
